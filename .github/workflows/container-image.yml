name: Container Image

on:
  push:
    branches:
      - master
    tags:
      - "*.*.*"

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        component:
          - server
          - client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        if: matrix.component == 'server'

      - name: Compile server
        if: matrix.component == 'server'
        env:
          CGO_ENABLED: 0
        run: |
          GOARCH=amd64 go build -ldflags -s -o server.amd64 ./cmd/server/
          GOARCH=arm   go build -ldflags -s -o server.arm   ./cmd/server/
          GOARCH=arm64 go build -ldflags -s -o server.arm64 ./cmd/server/

      - name: Setup qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.component }}
          tags: |
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and publish
        uses: docker/build-push-action@v3
        with:
          context: .
          file: "Dockerfile.${{ matrix.component }}"
          platforms: linux/amd64, linux/arm/v7, linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
